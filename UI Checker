<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Supplier Selection System</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        }
        
        h1 {
            text-align: center;
            color: #4a5568;
            margin-bottom: 30px;
            font-size: 2.5em;
            background: linear-gradient(45deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .input-section {
            background: white;
            padding: 25px;
            border-radius: 15px;
            margin-bottom: 25px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
            border: 1px solid rgba(102, 126, 234, 0.2);
        }
        
        .postcode-input {
            display: flex;
            gap: 15px;
            align-items: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }
        
        input[type="text"] {
            padding: 12px 16px;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 16px;
            transition: all 0.3s ease;
            min-width: 150px;
        }
        
        input[type="text"]:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        
        .services-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }
        
        .service-item {
            display: flex;
            align-items: center;
            padding: 12px;
            background: #f8fafc;
            border-radius: 8px;
            transition: all 0.3s ease;
            cursor: pointer;
        }
        
        .service-item:hover {
            background: #e6fffa;
            transform: translateY(-2px);
        }
        
        .service-item.selected {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }
        
        input[type="checkbox"] {
            margin-right: 10px;
            transform: scale(1.2);
            cursor: pointer;
        }
        
        .btn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 10px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 10px 5px;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);
        }
        
        .results-section {
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
            border: 1px solid rgba(102, 126, 234, 0.2);
        }
        
        .supplier-card {
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            border-radius: 12px;
            padding: 20px;
            margin: 15px 0;
            border-left: 4px solid #667eea;
            transition: all 0.3s ease;
        }
        
        .supplier-card:hover {
            transform: translateX(5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        
        .supplier-name {
            font-size: 1.3em;
            font-weight: bold;
            color: #2d3748;
            margin-bottom: 8px;
        }
        
        .supplier-details {
            color: #4a5568;
            font-size: 0.95em;
        }
        
        .distance {
            font-weight: bold;
            color: #667eea;
        }
        
        .no-results {
            text-align: center;
            color: #718096;
            font-style: italic;
            padding: 40px;
        }
        
        .loading {
            text-align: center;
            padding: 20px;
            color: #667eea;
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }
        
        .loading {
            animation: pulse 2s infinite;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üéØ Supplier Selection System</h1>
        
        <div class="input-section">
            <h3>üìç Customer Location & Requirements</h3>
            <div class="postcode-input">
                <label for="postcode"><strong>Customer Postcode:</strong></label>
                <input type="text" id="postcode" placeholder="e.g., NG6 8WA" value="NG6 8WA">
                <button class="btn" onclick="findSuppliers()">üîç Find Suppliers</button>
                <button class="btn" onclick="clearAll()">üóëÔ∏è Clear All</button>
            </div>
            
            <h4>Services Required:</h4>
            <div class="services-grid" id="servicesGrid">
                <!-- Services will be populated here -->
            </div>
        </div>
        
        <div class="results-section">
            <h3>üìã Matching Suppliers (Ranked by Distance)</h3>
            <div id="results">
                <div class="no-results">Select services and click "Find Suppliers" to see results</div>
            </div>
        </div>
    </div>

    <script>
        // Sample supplier database - in real implementation, this would come from your CSV/database
        const suppliers = [
            {
                name: "PrintCorp Ltd",
                postcode: "NG7 2RD",
                services: ["B1", "B2", "Litho", "Large Format", "Digi", "Finishing", "Binding", "Paper", "Mailing"],
                phone: "0115 123 4567",
                email: "orders@printcorp.co.uk"
            },
            {
                name: "Design & Print Solutions",
                postcode: "NG8 1AB",
                services: ["B1", "B3", "Digi", "Screen Printing", "Vinyls", "Signage", "POS", "Web"],
                phone: "0115 234 5678",
                email: "info@designprint.co.uk"
            },
            {
                name: "PromoMax",
                postcode: "NG5 7QW",
                services: ["Promo", "Lanyards & Wristbands", "Clothing", "Bags", "Confectionary"],
                phone: "0115 345 6789",
                email: "sales@promomax.co.uk"
            },
            {
                name: "FlexiPrint Systems",
                postcode: "NG9 3TY",
                services: ["Flexo", "Labels", "Packaging", "Tissue Paper", "Boxes", "Envelopes"],
                phone: "0115 456 7890",
                email: "orders@flexiprint.co.uk"
            },
            {
                name: "Digital Express",
                postcode: "NG6 5ER",
                services: ["B1", "B2", "B3", "Digi", "Indigo", "Finishing", "Binding", "Courier"],
                phone: "0115 567 8901",
                email: "express@digitalprint.co.uk"
            },
            {
                name: "Exhibition Specialists",
                postcode: "NG4 2WX",
                services: ["Large Format", "Exhibitions", "Signage", "POS", "Vinyls", "Mounting"],
                phone: "0115 678 9012",
                email: "info@exhbspec.co.uk"
            },
            {
                name: "Complete Print Services",
                postcode: "NG11 8ZA",
                services: ["B1", "Litho", "Digi", "Binding", "Finishing", "Paper", "Mailing", "Fulfillment"],
                phone: "0115 789 0123",
                email: "complete@printservices.co.uk"
            }
        ];

        const services = [
            "B1", "B2", "B3", "Litho", "Large Format", "Digi", "Flexo", "Indigo",
            "Screen Printing", "Finishing", "Vinyls", "Binding", "Clothing", "Labels",
            "Promo", "Lanyards & Wristbands", "Packaging", "Tissue Paper", "Boxes",
            "Bags", "Envelopes", "Signage", "Exhibitions", "POS", "Web", "Foil",
            "Paper", "Mailing", "Fulfillment", "Confectionary", "Courier"
        ];

        // Simple distance calculation (in reality, you'd use Google Maps API or similar)
        function calculateDistance(postcode1, postcode2) {
            // This is a simplified distance calculation
            // In practice, you'd use a proper geocoding service
            const distances = {
                "NG7 2RD": 2.3,
                "NG8 1AB": 4.1,
                "NG5 7QW": 3.7,
                "NG9 3TY": 6.2,
                "NG6 5ER": 1.8,
                "NG4 2WX": 5.5,
                "NG11 8ZA": 8.9
            };
            
            return distances[postcode2] || Math.random() * 10 + 1;
        }

        // Initialize the services grid
        function initializeServices() {
            const grid = document.getElementById('servicesGrid');
            grid.innerHTML = '';
            
            services.forEach(service => {
                const div = document.createElement('div');
                div.className = 'service-item';
                div.onclick = () => toggleService(service, div);
                
                div.innerHTML = `
                    <input type="checkbox" id="service-${service}" onchange="toggleService('${service}', this.parentElement)">
                    <label for="service-${service}">${service}</label>
                `;
                
                grid.appendChild(div);
            });
        }

        function toggleService(service, element) {
            const checkbox = element.querySelector('input[type="checkbox"]');
            checkbox.checked = !checkbox.checked;
            
            if (checkbox.checked) {
                element.classList.add('selected');
            } else {
                element.classList.remove('selected');
            }
        }

        function getSelectedServices() {
            const checkboxes = document.querySelectorAll('#servicesGrid input[type="checkbox"]:checked');
            return Array.from(checkboxes).map(cb => cb.id.replace('service-', ''));
        }

        function findSuppliers() {
            const customerPostcode = document.getElementById('postcode').value.trim();
            const selectedServices = getSelectedServices();
            const resultsDiv = document.getElementById('results');
            
            if (!customerPostcode) {
                resultsDiv.innerHTML = '<div class="no-results">Please enter a customer postcode</div>';
                return;
            }
            
            if (selectedServices.length === 0) {
                resultsDiv.innerHTML = '<div class="no-results">Please select at least one service</div>';
                return;
            }
            
            // Show loading
            resultsDiv.innerHTML = '<div class="loading">üîç Searching for suppliers...</div>';
            
            setTimeout(() => {
                // Filter suppliers who can provide ALL selected services
                const matchingSuppliers = suppliers.filter(supplier => {
                    return selectedServices.every(service => supplier.services.includes(service));
                });
                
                if (matchingSuppliers.length === 0) {
                    resultsDiv.innerHTML = '<div class="no-results">No suppliers found that can provide all selected services</div>';
                    return;
                }
                
                // Calculate distances and sort
                const suppliersWithDistance = matchingSuppliers.map(supplier => ({
                    ...supplier,
                    distance: calculateDistance(customerPostcode, supplier.postcode)
                })).sort((a, b) => a.distance - b.distance);
                
                // Display results
                let html = `<p><strong>Found ${suppliersWithDistance.length} supplier(s) for services: ${selectedServices.join(', ')}</strong></p>`;
                
                suppliersWithDistance.forEach((supplier, index) => {
                    html += `
                        <div class="supplier-card">
                            <div class="supplier-name">${index + 1}. ${supplier.name}</div>
                            <div class="supplier-details">
                                üìç <strong>Postcode:</strong> ${supplier.postcode} | 
                                üìè <strong>Distance:</strong> <span class="distance">${supplier.distance.toFixed(1)} km</span><br>
                                üìû <strong>Phone:</strong> ${supplier.phone} | 
                                üìß <strong>Email:</strong> ${supplier.email}<br>
                                üõ†Ô∏è <strong>Services:</strong> ${supplier.services.join(', ')}
                            </div>
                        </div>
                    `;
                });
                
                resultsDiv.innerHTML = html;
            }, 800);
        }

        function clearAll() {
            document.getElementById('postcode').value = '';
            document.querySelectorAll('#servicesGrid input[type="checkbox"]').forEach(cb => {
                cb.checked = false;
                cb.parentElement.classList.remove('selected');
            });
            document.getElementById('results').innerHTML = '<div class="no-results">Select services and click "Find Suppliers" to see results</div>';
        }

        // Initialize on page load
        window.onload = () => {
            initializeServices();
            // Pre-select B1 and Promo as in your example
            document.getElementById('service-B1').checked = true;
            document.getElementById('service-B1').parentElement.classList.add('selected');
            document.getElementById('service-Promo').checked = true;
            document.getElementById('service-Promo').parentElement.classList.add('selected');
        };
    </script>
</body>
</html>
